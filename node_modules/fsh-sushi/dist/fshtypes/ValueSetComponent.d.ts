import { FshEntity } from './FshEntity';
import { FshCode } from './FshCode';
export declare class ValueSetComponent extends FshEntity {
    inclusion: boolean;
    from: ValueSetComponentFrom;
    constructor(inclusion: boolean);
}
export declare class ValueSetConceptComponent extends ValueSetComponent {
    concepts: FshCode[];
}
export declare class ValueSetFilterComponent extends ValueSetComponent {
    filters: ValueSetFilter[];
}
export declare type ValueSetComponentFrom = {
    system?: string;
    valueSets?: string[];
};
export declare enum VsOperator {
    EQUALS = "=",
    IS_A = "is-a",
    DESCENDENT_OF = "descendent-of",
    IS_NOT_A = "is-not-a",
    REGEX = "regex",
    IN = "in",
    NOT_IN = "not-in",
    GENERALIZES = "generalizes",
    EXISTS = "exists"
}
export declare type ValueSetFilter = {
    property: string;
    operator: VsOperator;
    value: ValueSetFilterValue;
};
export declare type ValueSetFilterValue = string | RegExp | boolean | FshCode;
